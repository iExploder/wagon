utop # #use "wagongeneral_p2.ml";;
module WagonGeneral : WagonGeneralP
─( 00:06:10 )─< command 49 >──────────────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # open WagonGeneral;;
─( 00:06:13 )─< command 50 >──────────────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # addf;;
- : wf32 wexpr -> wf32 wexpr -> wf32 wexpr = <fun>
─( 00:06:15 )─< command 51 >──────────────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # init wf32 1.0;;
- : wf32 wexpr = <abstr>
─( 00:06:17 )─< command 52 >──────────────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # make_func wf32 wf32 (addf @@ init wf32 1.0);;
- : (wf32 -> wf32) wfunc = {f = <abstr>; decl = <abstr>}
─( 00:06:37 )─< command 53 >──────────────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let func1 = make_func wf32 wf32 (addf @@ init wf32 1.0);;
val func1 : (wf32 -> wf32) wfunc = {f = <abstr>; decl = <abstr>}
─( 00:07:12 )─< command 54 >──────────────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let v2 = apply func1 @@ init wf32 2.0;;
val v2 : wf32 wexpr = <abstr>
─( 00:07:20 )─< command 55 >──────────────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # show v2;;
- : string = "wf_00000001(2.000f)"
─( 00:07:49 )─< command 56 >──────────────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # exit 0;;